// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(TechTestDbContext))]
    [Migration("20250830144113_AddMissingEntities")]
    partial class AddMissingEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.DataModel.DbCurrency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DecimalDigits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = "USD",
                            DecimalDigits = 2,
                            Name = "US Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = "EUR",
                            DecimalDigits = 2,
                            Name = "Euro",
                            Symbol = "€"
                        },
                        new
                        {
                            Id = "GBP",
                            DecimalDigits = 2,
                            Name = "British Pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Id = "NZD",
                            DecimalDigits = 2,
                            Name = "New Zealand Dollar",
                            Symbol = "NZ$"
                        },
                        new
                        {
                            Id = "AUD",
                            DecimalDigits = 2,
                            Name = "Australian Dollar",
                            Symbol = "A$"
                        });
                });

            modelBuilder.Entity("DataAccess.DataModel.DbEventType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("EventType");

                    b.HasData(
                        new
                        {
                            Id = "matter.created",
                            Description = "A new legal matter was created",
                            GroupId = "matter",
                            Name = "Matter Created"
                        },
                        new
                        {
                            Id = "matter.updated",
                            Description = "A legal matter was updated",
                            GroupId = "matter",
                            Name = "Matter Updated"
                        },
                        new
                        {
                            Id = "matter.closed",
                            Description = "A legal matter was closed",
                            GroupId = "matter",
                            Name = "Matter Closed"
                        },
                        new
                        {
                            Id = "document.uploaded",
                            Description = "A document was uploaded",
                            GroupId = "document",
                            Name = "Document Uploaded"
                        },
                        new
                        {
                            Id = "document.reviewed",
                            Description = "A document was reviewed",
                            GroupId = "document",
                            Name = "Document Reviewed"
                        },
                        new
                        {
                            Id = "communication.email",
                            Description = "An email was sent",
                            GroupId = "communication",
                            Name = "Email Sent"
                        },
                        new
                        {
                            Id = "communication.call",
                            Description = "A phone call was made",
                            GroupId = "communication",
                            Name = "Phone Call"
                        },
                        new
                        {
                            Id = "billing.invoice",
                            Description = "An invoice was generated",
                            GroupId = "billing",
                            Name = "Invoice Generated"
                        },
                        new
                        {
                            Id = "billing.payment",
                            Description = "A payment was received",
                            GroupId = "billing",
                            Name = "Payment Received"
                        });
                });

            modelBuilder.Entity("DataAccess.DataModel.DbEventTypeGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypeGroup");

                    b.HasData(
                        new
                        {
                            Id = "matter",
                            Description = "Events related to legal matters",
                            Name = "Matter Events"
                        },
                        new
                        {
                            Id = "document",
                            Description = "Events related to documents",
                            Name = "Document Events"
                        },
                        new
                        {
                            Id = "communication",
                            Description = "Events related to communications",
                            Name = "Communication Events"
                        },
                        new
                        {
                            Id = "billing",
                            Description = "Events related to billing and finances",
                            Name = "Billing Events"
                        });
                });

            modelBuilder.Entity("DataAccess.DataModel.DbLawyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lawyer");
                });

            modelBuilder.Entity("DataAccess.DataModel.DbLegalMatter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LawyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Matter");
                });

            modelBuilder.Entity("DataAccess.DataModel.DbLegalMatterCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LegalMatterCategory");

                    b.HasData(
                        new
                        {
                            Id = "corporate",
                            Name = "Corporate Law"
                        },
                        new
                        {
                            Id = "litigation",
                            Name = "Litigation"
                        },
                        new
                        {
                            Id = "employment",
                            Name = "Employment Law"
                        },
                        new
                        {
                            Id = "intellectual-property",
                            Name = "Intellectual Property"
                        },
                        new
                        {
                            Id = "real-estate",
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = "tax",
                            Name = "Tax Law"
                        },
                        new
                        {
                            Id = "criminal",
                            Name = "Criminal Law"
                        },
                        new
                        {
                            Id = "family",
                            Name = "Family Law"
                        });
                });

            modelBuilder.Entity("DataAccess.DataModel.DbLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogEntry");
                });

            modelBuilder.Entity("DataAccess.DataModel.DbPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasPicture")
                        .HasColumnType("bit");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            FirstName = "John",
                            FullName = "John Doe",
                            HasPicture = false,
                            Initials = "JD",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = "2",
                            FirstName = "Jane",
                            FullName = "Jane Smith",
                            HasPicture = false,
                            Initials = "JS",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = "3",
                            FirstName = "Robert",
                            FullName = "Robert Johnson",
                            HasPicture = false,
                            Initials = "RJ",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = "4",
                            FirstName = "Emily",
                            FullName = "Emily Davis",
                            HasPicture = false,
                            Initials = "ED",
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = "5",
                            FirstName = "Michael",
                            FullName = "Michael Wilson",
                            HasPicture = false,
                            Initials = "MW",
                            LastName = "Wilson"
                        });
                });

            modelBuilder.Entity("DataAccess.DataModel.DbEventType", b =>
                {
                    b.HasOne("DataAccess.DataModel.DbEventTypeGroup", "Group")
                        .WithMany("EventTypes")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DataAccess.DataModel.DbEventTypeGroup", b =>
                {
                    b.Navigation("EventTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
